// <auto-generated />
using System;
using HR.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HR.API.Migrations
{
    [DbContext(typeof(HrDbContext))]
    partial class HrDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HR.Domain.Models.Country", b =>
                {
                    b.Property<string>("CountryId")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("country_id")
                        .IsFixedLength();

                    b.Property<string>("CountryName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("country_name");

                    b.Property<int>("RegionId")
                        .HasColumnType("int")
                        .HasColumnName("region_id");

                    b.HasKey("CountryId")
                        .HasName("PK__countrie__7E8CD055E43A25A5");

                    b.HasIndex("RegionId");

                    b.ToTable("countries", (string)null);
                });

            modelBuilder.Entity("HR.Domain.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("department_name");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.HasKey("DepartmentId")
                        .HasName("PK__departme__C2232422DED1761F");

                    b.HasIndex("LocationId");

                    b.ToTable("departments", (string)null);
                });

            modelBuilder.Entity("HR.Domain.Models.Dependent", b =>
                {
                    b.Property<int>("DependentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("dependent_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DependentId"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("relationship");

                    b.HasKey("DependentId")
                        .HasName("PK__dependen__F25E28CEC94ABF7D");

                    b.HasIndex("EmployeeId");

                    b.ToTable("dependents", (string)null);
                });

            modelBuilder.Entity("HR.Domain.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("first_name");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("date")
                        .HasColumnName("hire_date");

                    b.Property<int>("JobId")
                        .HasColumnType("int")
                        .HasColumnName("job_id");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("last_name");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int")
                        .HasColumnName("manager_id");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("salary");

                    b.HasKey("EmployeeId")
                        .HasName("PK__employee__C52E0BA8FC38C7CD");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobId");

                    b.HasIndex("ManagerId");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("HR.Domain.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("job_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"), 1L, 1);

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("job_title");

                    b.Property<decimal?>("MaxSalary")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("max_salary");

                    b.Property<decimal?>("MinSalary")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("min_salary");

                    b.HasKey("JobId")
                        .HasName("PK__jobs__6E32B6A5AE934EA7");

                    b.ToTable("jobs", (string)null);
                });

            modelBuilder.Entity("HR.Domain.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("city");

                    b.Property<string>("CountryId")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("country_id")
                        .IsFixedLength();

                    b.Property<string>("PostalCode")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("postal_code");

                    b.Property<string>("StateProvince")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("state_province");

                    b.Property<string>("StreetAddress")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("street_address");

                    b.HasKey("LocationId")
                        .HasName("PK__location__771831EAE113FD50");

                    b.HasIndex("CountryId");

                    b.ToTable("locations", (string)null);
                });

            modelBuilder.Entity("HR.Domain.Models.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("region_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionId"), 1L, 1);

                    b.Property<string>("RegionName")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("region_name");

                    b.HasKey("RegionId")
                        .HasName("PK__regions__01146BAE0B3A2A43");

                    b.ToTable("regions", (string)null);
                });

            modelBuilder.Entity("HR.Domain.Models.Country", b =>
                {
                    b.HasOne("HR.Domain.Models.Region", "Region")
                        .WithMany("Countries")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__countries__regio__3B75D760");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("HR.Domain.Models.Department", b =>
                {
                    b.HasOne("HR.Domain.Models.Location", "Location")
                        .WithMany("Departments")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__departmen__locat__48CFD27E");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("HR.Domain.Models.Dependent", b =>
                {
                    b.HasOne("HR.Domain.Models.Employee", "Employee")
                        .WithMany("Dependents")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__dependent__emplo__5441852A");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HR.Domain.Models.Employee", b =>
                {
                    b.HasOne("HR.Domain.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__employees__depar__5070F446");

                    b.HasOne("HR.Domain.Models.Job", "Job")
                        .WithMany("Employees")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__employees__job_i__4F7CD00D");

                    b.HasOne("HR.Domain.Models.Employee", "Manager")
                        .WithMany("InverseManager")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("FK__employees__manag__5165187F");

                    b.Navigation("Department");

                    b.Navigation("Job");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("HR.Domain.Models.Location", b =>
                {
                    b.HasOne("HR.Domain.Models.Country", "Country")
                        .WithMany("Locations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__locations__count__412EB0B6");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HR.Domain.Models.Country", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("HR.Domain.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HR.Domain.Models.Employee", b =>
                {
                    b.Navigation("Dependents");

                    b.Navigation("InverseManager");
                });

            modelBuilder.Entity("HR.Domain.Models.Job", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HR.Domain.Models.Location", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("HR.Domain.Models.Region", b =>
                {
                    b.Navigation("Countries");
                });
#pragma warning restore 612, 618
        }
    }
}
